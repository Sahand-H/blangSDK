package blang.distributions

/** The F-distribution. Also known as Fisher-Snedecor distribution. */
model F {
  random RealVar realization
	
  /** The degrees of freedom \(\d_1 \) and \(\d_2 \) . \( \d_1, \d_2 > 0 \) */
  param RealVar d1, d2
  
  laws {
  	logf(d1) {
		if (d1 <= 0.0) return NEGATIVE_INFINITY
		return - lnGamma(d1)
	}
	
	logf(d2) {
		if (d2 <= 0.0) return NEGATIVE_INFINITY
		return - lnGamma(d2)
	}
	logf(d1, d2) {
		if (d1 <= 0.0) return NEGATIVE_INFINITY
		if (d2 <= 0.0) return NEGATIVE_INFINITY
		return lnGamma(d1 + d2)
	}
		
	logf(d1, d2) {
		if (d1 <= 0.0) return NEGATIVE_INFINITY
		if (d2 <= 0.0) return NEGATIVE_INFINITY
		return (d1 / 2.0) * (log(d1) - log(d2))
	}
		
	logf(d1, realization) {
		if (d1 <= 0.0) return NEGATIVE_INFINITY
		if (realization < 0.0) return NEGATIVE_INFINITY
		return ( (d1 / 2) - 1 ) * log(realization)
	}
		
	logf(d1, d2, realization) {
		if (d1 <= 0.0) return NEGATIVE_INFINITY
		if (d2 <= 0.0) return NEGATIVE_INFINITY
		if (realization < 0.0) return NEGATIVE_INFINITY
		return - (d1 + d2 / 2) * log(1 + ((d1 / d2)*realization)) 
	}
  }
	
  generate(rand) {
	rand.fDist(d1, d2)
  }
}